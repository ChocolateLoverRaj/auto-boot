[package]
edition = "2021"
name = "rp"
version = "0.1.0"
license = "MIT OR Apache-2.0"

[dependencies]
cortex-m = "0.7"
cortex-m-rt = "0.7"
embedded-hal = { version = "1.0.0" }

defmt = "0.3"
defmt-rtt = "0.4"
panic-probe = { version = "0.3", features = ["print-defmt"] }

# We're using a Pico by default on this template
rp-pico = "0.9"
usb-device = "0.3.2"
usbd-storage = { version = "1.0.0", features = ["bbb", "scsi", "defmt"] }
# # fugit = { version = "0.3.7", features = ["defmt"] }
common = { version = "0.1.0", path = "../common" }
postcard = { version = "1.1.1", features = ["experimental-derive"] }
panic-halt = "1.0.0"
usbd-serial = "0.2.2"
embassy-executor = { version = "0.6.3", features = [
    "task-arena-size-98304",
    "arch-cortex-m",
    "executor-thread",
    "executor-interrupt",
    "defmt",
    "integrated-timers",
] }
embassy-futures = "0.1.1"
# Comment this to run non-embassy bins
embassy-rp = { version = "0.2.0", features = [
    "defmt",
    "unstable-pac",
    "time-driver",
    "critical-section-impl",
] }
embassy-usb = { version = "0.3.0", features = ["defmt"] }

# but you can use any BSP. Uncomment this to use the pro_micro_rp2040 BSP instead
# sparkfun-pro-micro-rp2040 = "0.8"

# If you're not going to use a Board Support Package you'll need these:
# rp2040-hal = { version="0.10", features=["rt", "critical-section-impl"] }
# rp2040-boot2 = "0.3"

[patch.crates-io]
postcard = { git = "https://github.com/ChocolateLoverRaj/postcard", branch = "range-max-size" }

[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = false
opt-level = 3
overflow-checks = true

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
overflow-checks = false

# do not optimize proc-macro crates = faster builds from scratch
[profile.dev.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false

[profile.release.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false

# cargo test
[profile.test]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = false
opt-level = 3
overflow-checks = true

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
